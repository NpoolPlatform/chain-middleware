// Code generated by ent, DO NOT EDIT.

package coinbase

import (
	"entgo.io/ent"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

const (
	// Label holds the string label denoting the coinbase type in the database.
	Label = "coin_base"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldEntID holds the string denoting the ent_id field in the database.
	FieldEntID = "ent_id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldLogo holds the string denoting the logo field in the database.
	FieldLogo = "logo"
	// FieldPresale holds the string denoting the presale field in the database.
	FieldPresale = "presale"
	// FieldUnit holds the string denoting the unit field in the database.
	FieldUnit = "unit"
	// FieldEnv holds the string denoting the env field in the database.
	FieldEnv = "env"
	// FieldReservedAmount holds the string denoting the reserved_amount field in the database.
	FieldReservedAmount = "reserved_amount"
	// FieldForPay holds the string denoting the for_pay field in the database.
	FieldForPay = "for_pay"
	// FieldDisabled holds the string denoting the disabled field in the database.
	FieldDisabled = "disabled"
	// Table holds the table name of the coinbase in the database.
	Table = "coin_bases"
)

// Columns holds all SQL columns for coinbase fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldEntID,
	FieldName,
	FieldLogo,
	FieldPresale,
	FieldUnit,
	FieldEnv,
	FieldReservedAmount,
	FieldForPay,
	FieldDisabled,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/NpoolPlatform/chain-middleware/pkg/db/ent/runtime"
//
var (
	Hooks  [1]ent.Hook
	Policy ent.Policy
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() uint32
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() uint32
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() uint32
	// DefaultDeletedAt holds the default value on creation for the "deleted_at" field.
	DefaultDeletedAt func() uint32
	// DefaultEntID holds the default value on creation for the "ent_id" field.
	DefaultEntID func() uuid.UUID
	// DefaultName holds the default value on creation for the "name" field.
	DefaultName string
	// DefaultLogo holds the default value on creation for the "logo" field.
	DefaultLogo string
	// DefaultPresale holds the default value on creation for the "presale" field.
	DefaultPresale bool
	// DefaultUnit holds the default value on creation for the "unit" field.
	DefaultUnit string
	// DefaultEnv holds the default value on creation for the "env" field.
	DefaultEnv string
	// DefaultReservedAmount holds the default value on creation for the "reserved_amount" field.
	DefaultReservedAmount decimal.Decimal
	// DefaultForPay holds the default value on creation for the "for_pay" field.
	DefaultForPay bool
	// DefaultDisabled holds the default value on creation for the "disabled" field.
	DefaultDisabled bool
)
