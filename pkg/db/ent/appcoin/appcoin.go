// Code generated by ent, DO NOT EDIT.

package appcoin

import (
	"entgo.io/ent"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

const (
	// Label holds the string label denoting the appcoin type in the database.
	Label = "app_coin"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldEntID holds the string denoting the ent_id field in the database.
	FieldEntID = "ent_id"
	// FieldAppID holds the string denoting the app_id field in the database.
	FieldAppID = "app_id"
	// FieldCoinTypeID holds the string denoting the coin_type_id field in the database.
	FieldCoinTypeID = "coin_type_id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDisplayNames holds the string denoting the display_names field in the database.
	FieldDisplayNames = "display_names"
	// FieldLogo holds the string denoting the logo field in the database.
	FieldLogo = "logo"
	// FieldForPay holds the string denoting the for_pay field in the database.
	FieldForPay = "for_pay"
	// FieldWithdrawAutoReviewAmount holds the string denoting the withdraw_auto_review_amount field in the database.
	FieldWithdrawAutoReviewAmount = "withdraw_auto_review_amount"
	// FieldProductPage holds the string denoting the product_page field in the database.
	FieldProductPage = "product_page"
	// FieldDisabled holds the string denoting the disabled field in the database.
	FieldDisabled = "disabled"
	// FieldDailyRewardAmount holds the string denoting the daily_reward_amount field in the database.
	FieldDailyRewardAmount = "daily_reward_amount"
	// FieldDisplay holds the string denoting the display field in the database.
	FieldDisplay = "display"
	// FieldDisplayIndex holds the string denoting the display_index field in the database.
	FieldDisplayIndex = "display_index"
	// FieldMaxAmountPerWithdraw holds the string denoting the max_amount_per_withdraw field in the database.
	FieldMaxAmountPerWithdraw = "max_amount_per_withdraw"
	// Table holds the table name of the appcoin in the database.
	Table = "app_coins"
)

// Columns holds all SQL columns for appcoin fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldEntID,
	FieldAppID,
	FieldCoinTypeID,
	FieldName,
	FieldDisplayNames,
	FieldLogo,
	FieldForPay,
	FieldWithdrawAutoReviewAmount,
	FieldProductPage,
	FieldDisabled,
	FieldDailyRewardAmount,
	FieldDisplay,
	FieldDisplayIndex,
	FieldMaxAmountPerWithdraw,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/NpoolPlatform/chain-middleware/pkg/db/ent/runtime"
//
var (
	Hooks  [1]ent.Hook
	Policy ent.Policy
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() uint32
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() uint32
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() uint32
	// DefaultDeletedAt holds the default value on creation for the "deleted_at" field.
	DefaultDeletedAt func() uint32
	// DefaultEntID holds the default value on creation for the "ent_id" field.
	DefaultEntID func() uuid.UUID
	// DefaultAppID holds the default value on creation for the "app_id" field.
	DefaultAppID func() uuid.UUID
	// DefaultCoinTypeID holds the default value on creation for the "coin_type_id" field.
	DefaultCoinTypeID func() uuid.UUID
	// DefaultName holds the default value on creation for the "name" field.
	DefaultName string
	// DefaultDisplayNames holds the default value on creation for the "display_names" field.
	DefaultDisplayNames []string
	// DefaultLogo holds the default value on creation for the "logo" field.
	DefaultLogo string
	// DefaultForPay holds the default value on creation for the "for_pay" field.
	DefaultForPay bool
	// DefaultWithdrawAutoReviewAmount holds the default value on creation for the "withdraw_auto_review_amount" field.
	DefaultWithdrawAutoReviewAmount decimal.Decimal
	// DefaultProductPage holds the default value on creation for the "product_page" field.
	DefaultProductPage string
	// DefaultDisabled holds the default value on creation for the "disabled" field.
	DefaultDisabled bool
	// DefaultDailyRewardAmount holds the default value on creation for the "daily_reward_amount" field.
	DefaultDailyRewardAmount decimal.Decimal
	// DefaultDisplay holds the default value on creation for the "display" field.
	DefaultDisplay bool
	// DefaultDisplayIndex holds the default value on creation for the "display_index" field.
	DefaultDisplayIndex uint32
	// DefaultMaxAmountPerWithdraw holds the default value on creation for the "max_amount_per_withdraw" field.
	DefaultMaxAmountPerWithdraw decimal.Decimal
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
